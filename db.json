{"meta":{"version":1,"warehouse":"4.0.2"},"models":{"Asset":[{"_id":"source/CNAME","path":"CNAME","modified":0,"renderable":0},{"_id":"themes/archer/source/assets/algolia_logo.svg","path":"assets/algolia_logo.svg","modified":0,"renderable":1},{"_id":"themes/archer/source/assets/beian.png","path":"assets/beian.png","modified":0,"renderable":1},{"_id":"themes/archer/source/assets/example_qr.png","path":"assets/example_qr.png","modified":0,"renderable":1},{"_id":"themes/archer/source/assets/favicon.ico","path":"assets/favicon.ico","modified":0,"renderable":1},{"_id":"themes/archer/source/assets/example_qr1.png","path":"assets/example_qr1.png","modified":0,"renderable":1},{"_id":"themes/archer/source/assets/favicon1.ico","path":"assets/favicon1.ico","modified":0,"renderable":1},{"_id":"themes/archer/source/assets/loading.svg","path":"assets/loading.svg","modified":0,"renderable":1},{"_id":"themes/archer/source/css/dark.css","path":"css/dark.css","modified":0,"renderable":1},{"_id":"themes/archer/source/css/dark.css.map","path":"css/dark.css.map","modified":0,"renderable":1},{"_id":"themes/archer/source/css/mobile.css","path":"css/mobile.css","modified":0,"renderable":1},{"_id":"themes/archer/source/css/mobile.css.map","path":"css/mobile.css.map","modified":0,"renderable":1},{"_id":"themes/archer/source/css/style.css","path":"css/style.css","modified":0,"renderable":1},{"_id":"themes/archer/source/css/style.css.map","path":"css/style.css.map","modified":0,"renderable":1},{"_id":"themes/archer/source/avatar/Misaka.jpg","path":"avatar/Misaka.jpg","modified":0,"renderable":1},{"_id":"themes/archer/source/avatar/diving.jpg","path":"avatar/diving.jpg","modified":0,"renderable":1},{"_id":"themes/archer/source/avatar/star-lord.jpg","path":"avatar/star-lord.jpg","modified":0,"renderable":1},{"_id":"themes/archer/source/font/Oswald-Regular.ttf","path":"font/Oswald-Regular.ttf","modified":0,"renderable":1},{"_id":"themes/archer/source/font/Source Sans Pro.woff","path":"font/Source Sans Pro.woff","modified":0,"renderable":1},{"_id":"themes/archer/source/font/Source Sans Pro.woff2","path":"font/Source Sans Pro.woff2","modified":0,"renderable":1},{"_id":"themes/archer/source/font/SourceCodePro-Regular.ttf.woff","path":"font/SourceCodePro-Regular.ttf.woff","modified":0,"renderable":1},{"_id":"themes/archer/source/font/SourceCodePro-Regular.ttf.woff2","path":"font/SourceCodePro-Regular.ttf.woff2","modified":0,"renderable":1},{"_id":"themes/archer/source/intro/404-bg.jpg","path":"intro/404-bg.jpg","modified":0,"renderable":1},{"_id":"themes/archer/source/intro/about-bg.jpg","path":"intro/about-bg.jpg","modified":0,"renderable":1},{"_id":"themes/archer/source/intro/post-bg.jpg","path":"intro/post-bg.jpg","modified":0,"renderable":1},{"_id":"themes/archer/source/intro/index-bg.jpg","path":"intro/index-bg.jpg","modified":0,"renderable":1},{"_id":"themes/archer/source/lib/jquery.min.js","path":"lib/jquery.min.js","modified":0,"renderable":1},{"_id":"themes/archer/source/lib/webfontloader.min.js","path":"lib/webfontloader.min.js","modified":0,"renderable":1},{"_id":"themes/archer/source/scripts/customFontLoader.js","path":"scripts/customFontLoader.js","modified":0,"renderable":1},{"_id":"themes/archer/source/scripts/customFontLoader.js.map","path":"scripts/customFontLoader.js.map","modified":0,"renderable":1},{"_id":"themes/archer/source/scripts/dark.js","path":"scripts/dark.js","modified":0,"renderable":1},{"_id":"themes/archer/source/scripts/dark.js.map","path":"scripts/dark.js.map","modified":0,"renderable":1},{"_id":"themes/archer/source/scripts/main.js","path":"scripts/main.js","modified":0,"renderable":1},{"_id":"themes/archer/source/scripts/main.js.LICENSE.txt","path":"scripts/main.js.LICENSE.txt","modified":0,"renderable":1},{"_id":"themes/archer/source/scripts/main.js.map","path":"scripts/main.js.map","modified":0,"renderable":1},{"_id":"themes/archer/source/scripts/search.js","path":"scripts/search.js","modified":0,"renderable":1},{"_id":"themes/archer/source/scripts/search.js.LICENSE.txt","path":"scripts/search.js.LICENSE.txt","modified":0,"renderable":1},{"_id":"themes/archer/source/scripts/search.js.map","path":"scripts/search.js.map","modified":0,"renderable":1},{"_id":"themes/archer/source/scripts/share.js","path":"scripts/share.js","modified":0,"renderable":1},{"_id":"themes/archer/source/scripts/share.js.map","path":"scripts/share.js.map","modified":0,"renderable":1}],"Cache":[{"_id":"source/.DS_Store","hash":"de7610198cf7092db814e46d17b75d0c87cdc7cd","modified":1693301947968},{"_id":"source/_posts/Clean-Code.md","hash":"7be64cf68adf6d31b6fdc0b1dace3340a9d822cd","modified":1693378821868},{"_id":"source/CNAME","hash":"f202a47391a2870611eb332369d4a70db1ee04c8","modified":1693297141852},{"_id":"source/about/index.md","hash":"97c9c74637855f1fc463304a107cbe6a9138972f","modified":1693375737588},{"_id":"source/images/1693377274242.jpg","hash":"4ca9199e56777f3159450774c48b411c7a6adae2","modified":1693377297200},{"_id":"themes/archer/layout/_partial/comment/custom.ejs","hash":"da39a3ee5e6b4b0d3255bfef95601890afd80709","modified":1693311503855},{"_id":"themes/archer/.DS_Store","hash":"8577d4b076b691a75d1f27c6960fd9c9972364d3","modified":1693375074942},{"_id":"themes/archer/.babelrc","hash":"078678843ebb6992f0cc44304faa6f1cb082bd4a","modified":1693311503851},{"_id":"themes/archer/.editorconfig","hash":"3a7f38d9586f73ed1c46cfbc9839b3465ec57d7c","modified":1693311503851},{"_id":"themes/archer/.eslintrc.json","hash":"352a07b94efa124a5658b502bf973683be09fd00","modified":1693311503851},{"_id":"themes/archer/.eslintignore","hash":"304e696987e3f31cd0a7a13a835d58d8bda3aa6c","modified":1693311503851},{"_id":"themes/archer/.gitignore","hash":"9a5e5d0a05fc5bee9bf00a0c5cefc712b4bf0904","modified":1693311503852},{"_id":"themes/archer/.prettierrc.js","hash":"bae1d8dab7bf8b68207386f366e092778940540c","modified":1693311503852},{"_id":"themes/archer/.gitattributes","hash":"82c1a621642d5b620275ae1ed59845c3f7015a64","modified":1693311503851},{"_id":"themes/archer/.prettierignore","hash":"29648a30c14f6df709eb6610f506c82825910cc8","modified":1693311503852},{"_id":"themes/archer/LICENSE","hash":"0da0c361bf299375739c6b668a44af0f5faf37bb","modified":1693311503852},{"_id":"themes/archer/CHANGELOG.md","hash":"6fbf3e5e8ed6ae6fb68fd74bfd2b53d99db4b1fd","modified":1693311503852},{"_id":"themes/archer/README.md","hash":"63eb0f874bc056d407ee343f853adee9a5765434","modified":1693311503852},{"_id":"themes/archer/_config.yml","hash":"93b9ae3f2ad91676b63ce44e596bd49b760b2078","modified":1693376783464},{"_id":"themes/archer/package.json","hash":"81af75826e854ac80f6337dc4f1ce4b51f066b0b","modified":1693311503858},{"_id":"themes/archer/gulpfile.js","hash":"ee1ad57aa5113a084091fd86fca2c34e1b9e4b95","modified":1693311503853},{"_id":"themes/archer/webpack.dev.js","hash":"7c740341894bd584f72145512a58703bb134ea60","modified":1693311503884},{"_id":"themes/archer/webpack.config.js","hash":"e090744d8e7a0d0906d1d6b8192eb906092d1e9b","modified":1693311503884},{"_id":"themes/archer/webpack.prod.js","hash":"a34abc06d6cd8fa4e267069468726322a3656e2b","modified":1693311503884},{"_id":"themes/archer/languages/default.yml","hash":"e937791c5080868c3abe20bab4cf266a342b5922","modified":1693311503854},{"_id":"themes/archer/languages/en.yml","hash":"5a1a85fed95dab4f01671714ee8cc5420936c05f","modified":1693311503854},{"_id":"themes/archer/layout/404.ejs","hash":"9137c0b1153ca8cd32e60a38fd79b7e4b91c8bf4","modified":1693311503854},{"_id":"themes/archer/layout/index.ejs","hash":"093f8dbe875cad94b9618f181d1b5621d8874b19","modified":1693311503856},{"_id":"themes/archer/layout/about.ejs","hash":"748786bebad03b1ef79c551f26522fa2bee1b9dd","modified":1693311503856},{"_id":"themes/archer/layout/post.ejs","hash":"d421aba0ab93e2b7a22d060da4c56441bf97cdb9","modified":1693311503856},{"_id":"themes/archer/layout/site-meta.ejs","hash":"562e446a742fde07e0880343d5693bf8cb0dec23","modified":1693311503856},{"_id":"themes/archer/layout/layout.ejs","hash":"1bee90a75c1f4b04c90421419dd68acdec15b998","modified":1693311503856},{"_id":"themes/archer/docs/develop-guide-en.md","hash":"c62510d3d14b38126b5a86ff30416cb71abc1d9a","modified":1693311503852},{"_id":"themes/archer/docs/develop-guide-zh.md","hash":"451b304c1a5d081313f0532a4f5665f0855d4cfd","modified":1693311503853},{"_id":"themes/archer/docs/README-en.md","hash":"5fab9c913e6c708c076c718394774747e1f9a249","modified":1693376611521},{"_id":"themes/archer/dev/archer.sh","hash":"4065c4e55462d5ecf016464adea0d1db967ef4b4","modified":1693311503852},{"_id":"themes/archer/layout/_partial/algolia.ejs","hash":"c7bf50dd6e60fd8e8dfbeab9960172359af7307e","modified":1693311503854},{"_id":"themes/archer/layout/_partial/base-background-image.ejs","hash":"18365516cd8819de853716f0d47a72a60a5edc46","modified":1693311503854},{"_id":"themes/archer/layout/_partial/base-footer-fixed.ejs","hash":"e4dbde6594c0c2d1c5de71ddf968be0879ceddb7","modified":1693311503854},{"_id":"themes/archer/layout/_partial/base-head.ejs","hash":"687c08823e7ce43e6ebb44f2fb4b75549abfed29","modified":1693311503854},{"_id":"themes/archer/layout/_partial/base-header.ejs","hash":"57d1ae0fd6f9f1ab52a64c44a8ae17ee71de22ef","modified":1693311503854},{"_id":"themes/archer/layout/_partial/base-preload-polyfill.ejs","hash":"d046322674052b0667775dca0886f14e0d812897","modified":1693311503854},{"_id":"themes/archer/layout/_partial/base-social.ejs","hash":"0190f06c2f0345cec00eba2074bbfd1b56a7fdc9","modified":1693311503854},{"_id":"themes/archer/layout/_partial/base-title-tags.ejs","hash":"1d5a95782ffc382fdb6b1239b3b97db125984fa0","modified":1693311503854},{"_id":"themes/archer/layout/_partial/base-profile.ejs","hash":"f63032391dd75905b6663628a9ca231fa0283350","modified":1693311503854},{"_id":"themes/archer/source/.DS_Store","hash":"a2574c2dcd752b4b7b75cc59f540305aaf28ca81","modified":1693375074943},{"_id":"themes/archer/layout/_partial/custom-font.ejs","hash":"bc6bfda53f8856e1473263a44fd861e96cc00719","modified":1693311503855},{"_id":"themes/archer/.github/ISSUE_TEMPLATE/-----feature-request-.md","hash":"edb6b06041660beb656fd5e4062d5a21577cbb3a","modified":1693311503851},{"_id":"themes/archer/layout/_partial/base-footer.ejs","hash":"73120df1a9be14b5a075500ab4b1f5bd567ca599","modified":1693376527831},{"_id":"themes/archer/.github/ISSUE_TEMPLATE/-----------bug--help-wanted-or-bug-report-.md","hash":"55e843652d99fae32534a7630e698d2394020baf","modified":1693311503851},{"_id":"themes/archer/.github/ISSUE_TEMPLATE/-----other-issue-.md","hash":"05f24b2df012808f6410f1ef2230d4fd1a5d6cf5","modified":1693311503851},{"_id":"themes/archer/layout/_partial/intro-height.ejs","hash":"7b8b078b1c1e5b216e46b32a0cab67330c92c734","modified":1693311503855},{"_id":"themes/archer/.github/workflows/deploy-demo-page.yml","hash":"91c065ee0ec29f7bb10263fefa6f3072bc493a38","modified":1693311503852},{"_id":"themes/archer/source/assets/algolia_logo.svg","hash":"90035272fa31a3f65b3c0e2cb8a633876ef457dc","modified":1693311503858},{"_id":"themes/archer/source/assets/beian.png","hash":"a99df13e8eb11db86edebf6e5ac246eb59f4b3c4","modified":1693311503859},{"_id":"themes/archer/source/assets/example_qr1.png","hash":"cce20432c34875f4d9c6df927ede0fc0f00bb194","modified":1693311503859},{"_id":"themes/archer/source/assets/loading.svg","hash":"45be17d07697d604d8981890eb21e308530c7a38","modified":1693311503859},{"_id":"themes/archer/source/css/dark.css","hash":"4db211216f16a5e66d4d499158f4005a1bbb39f5","modified":1693311503859},{"_id":"themes/archer/source/assets/favicon1.ico","hash":"8b200c575d273d41a179c102442e191414e74eae","modified":1693311503859},{"_id":"themes/archer/source/css/dark.css.map","hash":"f49556935deae49df3158c2eb2265464129ef978","modified":1693311503859},{"_id":"themes/archer/source/css/mobile.css","hash":"acb0dfcce26ec93f59c6ec4936006abbe8daefee","modified":1693311503859},{"_id":"themes/archer/source/css/mobile.css.map","hash":"c9f9dade45b119ae2eb7a93be0160baef4d494f8","modified":1693311503860},{"_id":"themes/archer/source/avatar/Misaka.jpg","hash":"74a0372523f98dfbba992bf80642e160d04dc9b1","modified":1693311503859},{"_id":"themes/archer/source/assets/favicon.ico","hash":"92f9579934260bc5f31d13cd01ddf9116bed8f12","modified":1693359500901},{"_id":"themes/archer/source/css/style.css","hash":"f08b1ec3a5fe1bf936401a238d55e0487296b42c","modified":1693311503860},{"_id":"themes/archer/source/avatar/star-lord.jpg","hash":"f4ad3fb109ca5d55cbdb64733bd2bd478b70b5a4","modified":1693315099179},{"_id":"themes/archer/source/avatar/diving.jpg","hash":"8229ec672d9721d2a2d09292874a577323bfbfb2","modified":1693315081064},{"_id":"themes/archer/source/font/Source Sans Pro.woff2","hash":"da65f527a8da65d5eb6721626d28cfdb46ab104a","modified":1693311503861},{"_id":"themes/archer/source/font/Source Sans Pro.woff","hash":"a6722c9b6439b7a020a9be3d3178970757a9265c","modified":1693311503861},{"_id":"themes/archer/source/lib/webfontloader.min.js","hash":"4c69aeb4e4f355912503d1c460e8e7aa6ea6963e","modified":1693311503865},{"_id":"themes/archer/source/scripts/customFontLoader.js","hash":"7c2f03fbd2b8340b77b1b02778a34e5ac10b560c","modified":1693311503865},{"_id":"themes/archer/source/scripts/dark.js","hash":"28ba818b2ab8a9454a52fe2710b5a8a81a195e4d","modified":1693311503866},{"_id":"themes/archer/source/scripts/customFontLoader.js.map","hash":"702a44b0b1b450263592bfb1199c8d36ea9834a2","modified":1693311503865},{"_id":"themes/archer/source/scripts/dark.js.map","hash":"feb9e1905c4b313b839c1c3b69ad61c05f265a9a","modified":1693311503866},{"_id":"themes/archer/source/scripts/main.js.LICENSE.txt","hash":"959bfc660011bc6a0800fe9e7974080f64c062aa","modified":1693311503870},{"_id":"themes/archer/source/scripts/search.js.LICENSE.txt","hash":"2c9b607ded909550f2ed2d0f2e7271781d9f78d9","modified":1693311503875},{"_id":"themes/archer/source/scripts/share.js","hash":"2210dd8dacea4f1ca11c0047dfafd0a170abd953","modified":1693311503878},{"_id":"themes/archer/src/js/customFontLoader.js","hash":"98bb3a1c0f69bc2675bfa6579df2dde38ba6fded","modified":1693311503879},{"_id":"themes/archer/src/js/browser.js","hash":"c56e0094a04d6f20564f8f0da1496cb7631d4dc2","modified":1693311503879},{"_id":"themes/archer/src/js/fancybox.js","hash":"6dfc8015d6000c76806424876f5472f39e5485af","modified":1693311503879},{"_id":"themes/archer/src/js/dark.js","hash":"2cd243df8593b18a1a293f483d2db18503c53547","modified":1693311503879},{"_id":"themes/archer/src/js/initSidebar.js","hash":"c9c030a451ed394934c1858c7d55ec5a7b588305","modified":1693311503879},{"_id":"themes/archer/src/js/fontawsome.js","hash":"43e852899ee1bc22495253428a2ff3bdedf89882","modified":1693311503879},{"_id":"themes/archer/src/js/main.js","hash":"658565fbf20adc5b9b237a53c973d0685ce60202","modified":1693311503879},{"_id":"themes/archer/src/js/init.js","hash":"dee0a1c959bd4dc3953428b1b2137f42bc659b32","modified":1693311503879},{"_id":"themes/archer/src/js/mobile.js","hash":"4ae6837e18b729f85b5097867fc742ba2d1edf25","modified":1693311503879},{"_id":"themes/archer/src/js/share.js","hash":"c2e6a3d8d6883cde0c67484daca5e742ebb8e0d1","modified":1693311503880},{"_id":"themes/archer/src/js/scroll.js","hash":"3017b329329888b287ad233831138428475749be","modified":1693311503880},{"_id":"themes/archer/src/js/sidebar.js","hash":"2518f2b0b7947530851e6c73245dddc96a618a08","modified":1693311503880},{"_id":"themes/archer/src/js/tag.js","hash":"395db7eb2d09e2df6eefcf3f4c7da5cd809a6221","modified":1693311503880},{"_id":"themes/archer/src/js/search.js","hash":"0bf92b51fef092989f4fe16fb7ef7724d11e9f58","modified":1693311503880},{"_id":"themes/archer/src/js/util.js","hash":"e49b30f6ba82d5183d005fc0192d2d673969586b","modified":1693311503880},{"_id":"themes/archer/src/scss/_common.scss","hash":"e80acb4f0049d24260f0a32a301f985ae7e166b8","modified":1693311503880},{"_id":"themes/archer/src/js/toc.js","hash":"96a7e07d1976eb29a77799ac2b7abb47907f4b45","modified":1693311503880},{"_id":"themes/archer/src/scss/_mixin.scss","hash":"78da2632e7150baa0fd1f6d04fc59ca5e304903d","modified":1693311503881},{"_id":"themes/archer/src/scss/_normalize.scss","hash":"a2dbeb38ad08bb8975856d75954cc697bf8e5ff7","modified":1693311503882},{"_id":"themes/archer/src/scss/_variables.scss","hash":"01e5cab2b5fc686c52145d65229f17db13a3cc54","modified":1693311503883},{"_id":"themes/archer/src/scss/dark.scss","hash":"739af46f0ef8c0c89c3e78ec577e844678f737b5","modified":1693311503883},{"_id":"themes/archer/src/scss/mobile.scss","hash":"2b542af943a8502aae26362dd2af1fbcf68eac1c","modified":1693311503884},{"_id":"themes/archer/src/scss/style.scss","hash":"b10b9a44efaa293b7ac220e66c963dca04ad4bc7","modified":1693311503884},{"_id":"themes/archer/layout/_partial/comment/changyan.ejs","hash":"cc02b3cf9586135d2d7f822c7ad97d81fdf6d4e5","modified":1693311503855},{"_id":"themes/archer/layout/_partial/comment/disqus.ejs","hash":"0f0612ce9ca5c3dc349153a87fdc9dba5f93c52c","modified":1693311503855},{"_id":"themes/archer/layout/_partial/comment/gitalk.ejs","hash":"840279fd3e21dc1cdb1932fe4d9a3be5f670e764","modified":1693311503855},{"_id":"themes/archer/layout/_partial/comment/gitment.ejs","hash":"eda79ada5171ed44e4f3ae4d8a345ad2c7adb2df","modified":1693311503855},{"_id":"themes/archer/layout/_partial/comment/utteranc.ejs","hash":"f4ec58c74e6870b8c22032ad3a3c1ee33e5ec41d","modified":1693311503855},{"_id":"themes/archer/layout/_partial/comment/livere.ejs","hash":"d65d9372fca4b316b94ae511f8ccfb0b92d7b065","modified":1693311503855},{"_id":"themes/archer/layout/_partial/comment/waline.ejs","hash":"c2208d6f05490bbf1b35cdf1519a39933212c33e","modified":1693311503855},{"_id":"themes/archer/layout/_partial/critical-css/critical-style.ejs","hash":"e67a7a2f6bcbfd97e95577446872e217e0c48e80","modified":1693311503855},{"_id":"themes/archer/layout/_partial/math/mathjax.ejs","hash":"84c40a07765e95213045e9b9f7a8c9aaa9c69161","modified":1693311503855},{"_id":"themes/archer/layout/_partial/script/font-loader.ejs","hash":"0473335774025d185dcbaf641496b25a8f33f7af","modified":1693311503856},{"_id":"themes/archer/layout/_partial/comment/youyan.ejs","hash":"2f4ef49a74a8d63310af60ecda6d765b8c386ff4","modified":1693311503855},{"_id":"themes/archer/layout/_partial/sidebar/base-sidebar.ejs","hash":"bdf08beebbe454da9d4c55b35efd317d5f222be5","modified":1693311503856},{"_id":"themes/archer/layout/_partial/sidebar/sidebar-archives.ejs","hash":"6360da867c23b8daa5e34e62c5c5552e2974e360","modified":1693311503856},{"_id":"themes/archer/layout/_partial/sidebar/sidebar-categories.ejs","hash":"02f407d9f9968d228a6a47f2a283b8cf41836a1a","modified":1693311503856},{"_id":"themes/archer/src/scss/_dark/_common-dark.scss","hash":"fc03470312c57a39bc131a1e86cdd3ea2ddb164a","modified":1693311503880},{"_id":"themes/archer/src/scss/_partial/_404.scss","hash":"9e5cb20871e5bf1af4cf50694a73bd7c9fe64685","modified":1693311503882},{"_id":"themes/archer/src/scss/_partial/_algolia.scss","hash":"fd7716d8559a9f58f7caef576c553ca7ba1a85e1","modified":1693311503882},{"_id":"themes/archer/layout/_partial/comment/valine.ejs","hash":"24cd7b9e28ceb4b2083ddccce26517de64b35119","modified":1693311503855},{"_id":"themes/archer/src/scss/_partial/_index-page.scss","hash":"91dc2a0c1ca8d25b1f27d91fa1c81ceb5ff8c3bc","modified":1693311503882},{"_id":"themes/archer/src/scss/_partial/_post-page.scss","hash":"7583c8c2004e333c5b94e4b868ac778357e0d21e","modified":1693311503883},{"_id":"themes/archer/src/scss/_dark/_partial/_algolia-dark.scss","hash":"e9ea52ca5410c6a6eb53d2a6de1419d3db97d8ca","modified":1693311503880},{"_id":"themes/archer/src/scss/_mobile/_partial/_index-page-mobile.scss","hash":"2d166bb6f234b8773a9ea12457b10e94902a32f1","modified":1693311503882},{"_id":"themes/archer/src/scss/_dark/_partial/_index-page-dark.scss","hash":"4c1406e82b2d4503e027443f64f0984fe0942e1d","modified":1693311503881},{"_id":"themes/archer/src/scss/_dark/_partial/_post-page-dark.scss","hash":"d61059785c72c626990f5b473dc3570cb52c0d73","modified":1693311503881},{"_id":"themes/archer/src/scss/_partial/_comment/_gitalk.scss","hash":"341bb251987f30221936e36b44374b2b5ce0d218","modified":1693311503882},{"_id":"themes/archer/src/scss/_partial/_partial/_footer.scss","hash":"4aafefa6834c8a8583c1cdace620a31306676a57","modified":1693311503882},{"_id":"themes/archer/src/scss/_partial/_partial/_header.scss","hash":"ce683553806293fea0466f363b18de0ee341dd4e","modified":1693311503883},{"_id":"themes/archer/src/scss/_partial/_partial/_footer-fixed.scss","hash":"1eb918f6c16054ef2b53b9eea60c751ad89bbd55","modified":1693311503882},{"_id":"themes/archer/src/scss/_partial/_partial/_intro.scss","hash":"4567b9081f063e5fb388b0671f3bc322bdc9acfa","modified":1693311503883},{"_id":"themes/archer/src/scss/_partial/_partial/_paginator.scss","hash":"67c2e697a5fbb3b8006cf358ea45eb7f75b496f8","modified":1693311503883},{"_id":"themes/archer/src/scss/_partial/_partial/_profile.scss","hash":"4771add895f8a47917ae2d0d34b92cb327329bf1","modified":1693311503883},{"_id":"themes/archer/layout/_partial/sidebar/sidebar-tags.ejs","hash":"469455994771da166ddecb4839efa9ef28f2775d","modified":1693311503856},{"_id":"themes/archer/src/scss/_partial/_partial/_scrollbar.scss","hash":"424c08f4acc3f643567f138ffea7d8337791d2c4","modified":1693311503883},{"_id":"themes/archer/src/scss/_partial/_post/_writing-enhance.scss","hash":"4cb495c64d144b2bcf225f2b87641017bd652e66","modified":1693311503883},{"_id":"themes/archer/src/scss/_partial/_post/_code.scss","hash":"504f9fdb723c7b287d958211189d25919ac592f6","modified":1693311503883},{"_id":"themes/archer/src/scss/_partial/_sidebar/_sidebar-tags.scss","hash":"93cc82cb56663e83e90fbd6fe31ffdd38e694f3b","modified":1693311503883},{"_id":"themes/archer/src/scss/_partial/_sidebar/_sidebar.scss","hash":"b2870a9cdaea9b9c8426d406d6859a8f3f1a995f","modified":1693311503883},{"_id":"themes/archer/src/scss/_mobile/_partial/_post/_writing-enhance-mobile.scss","hash":"9e714c1cdc61a4ebd5510667e87e879d0b14de67","modified":1693311503882},{"_id":"themes/archer/src/scss/_mobile/_partial/_sidebar/_sidebar-tags-mobile.scss","hash":"b5c62234defe693b4cfa65bda188d71c937eeaf9","modified":1693311503882},{"_id":"themes/archer/src/scss/_dark/_partial/_partial/_footer-dark.scss","hash":"d074a8fef75ba626dd3448cc42290a8c722fd182","modified":1693311503881},{"_id":"themes/archer/src/scss/_dark/_partial/_comment/_gitalk-dark.scss","hash":"57accaee4bb5b502d5d3e94c7981ac6996804cf0","modified":1693311503880},{"_id":"themes/archer/src/scss/_dark/_partial/_partial/_footer-fixed-dark.scss","hash":"f4e3eb7aa19c1061b5d9df4f6a7745902e5843f2","modified":1693311503881},{"_id":"themes/archer/src/scss/_dark/_partial/_partial/_header-dark.scss","hash":"ed815d959a37cccdf9137ace91c68bea8ca922c2","modified":1693311503881},{"_id":"themes/archer/src/scss/_dark/_partial/_partial/_profile-dark.scss","hash":"c0fe68f6e9c196157adc71fea0d97f6f70f0a31b","modified":1693311503881},{"_id":"themes/archer/src/scss/_partial/_sidebar/_sidebar-archive.scss","hash":"a7374f46ca31bf8ebf5bafea909100921d0c52a4","modified":1693311503883},{"_id":"themes/archer/src/scss/_dark/_partial/_post/_code-dark.scss","hash":"9ded8203699f816558fd1493a3ce7cf3d38818e9","modified":1693311503881},{"_id":"themes/archer/src/scss/_dark/_partial/_sidebar/_sidebar-archive-dark.scss","hash":"79b7548214339807ff713f0c7454a227d24d6d0d","modified":1693311503881},{"_id":"themes/archer/src/scss/_dark/_partial/_sidebar/_sidebar-dark.scss","hash":"8e77738f83a425eebb00513ee98e487fe71fdc22","modified":1693311503881},{"_id":"themes/archer/src/scss/_dark/_partial/_sidebar/_sidebar-tags-dark.scss","hash":"6621db2ff1182e3cd14286af4b8f3d8c5bd14e2a","modified":1693311503881},{"_id":"themes/archer/source/css/style.css.map","hash":"dbe8f8c1fccf8bd9d28ecf3874036a2281319aa0","modified":1693311503860},{"_id":"themes/archer/source/font/Oswald-Regular.ttf","hash":"965d729546a43a8490ad4cf33c25ac475682100c","modified":1693311503860},{"_id":"themes/archer/source/font/SourceCodePro-Regular.ttf.woff","hash":"12eef75e1ad3eca9dae42b65505010ce4464a315","modified":1693311503861},{"_id":"themes/archer/source/font/SourceCodePro-Regular.ttf.woff2","hash":"f5991289ec17884cb641da0646d278d36702a190","modified":1693311503861},{"_id":"themes/archer/source/intro/404-bg.jpg","hash":"3afb5bb26f4ff0bd0e0a28df955c8aa7d746d3c5","modified":1693311503862},{"_id":"themes/archer/source/lib/jquery.min.js","hash":"ad886e472b3557f3dc7dfa2bc43468ab8d1cef5b","modified":1693311503865},{"_id":"themes/archer/source/intro/post-bg.jpg","hash":"525fafb2238c27754d8fa751f143ff1de9b8482d","modified":1693311503864},{"_id":"themes/archer/source/intro/about-bg.jpg","hash":"ab388276822417cc4e703312c14e20280ec783b3","modified":1693311503863},{"_id":"themes/archer/source/scripts/search.js","hash":"ac8e9d130ea410832a421d661898abee63bd8e67","modified":1693311503875},{"_id":"themes/archer/source/scripts/share.js.map","hash":"1e018aa465800a066480e33c848f380880af6743","modified":1693311503879},{"_id":"themes/archer/docs/snap.png","hash":"0b2a8bf016f6eed576abfdcdb7dcf8de51c12562","modified":1693311503853},{"_id":"themes/archer/source/intro/index-bg.jpg","hash":"96b52e177b8bc53e64ec6ee1e10b2b6a4e13083b","modified":1693311503864},{"_id":"themes/archer/source/assets/example_qr.png","hash":"1b7c5607629dd7edb512f2e38b720c29b8d7e844","modified":1693375122627},{"_id":"themes/archer/package-lock.json","hash":"400ab1cc2a2f1380a5e9ab69abe3a5b93f923d8d","modified":1693311503858},{"_id":"themes/archer/source/scripts/main.js","hash":"11fd75dddcbef7157fbfb8717b3463a80fda1fb3","modified":1693311503870},{"_id":"themes/archer/source/scripts/search.js.map","hash":"bd469588b3bee82b3cf72b72d447c854f4d76875","modified":1693311503878},{"_id":"themes/archer/source/scripts/main.js.map","hash":"79d928070b7e5333ca241c5563ab4fe9cab31b74","modified":1693311503875},{"_id":"public/content.json","hash":"db86d808ab5d98286e4ec556315be679532ef789","modified":1693380735639},{"_id":"public/about/index.html","hash":"f82d41df9eb2ee20652831166d05af415ee2f989","modified":1693380735639},{"_id":"public/2023/08/30/Clean-Code/index.html","hash":"762a8b0635bfac3d982076b40833b72db865ffbd","modified":1693380735639},{"_id":"public/archives/index.html","hash":"522e6e1fc896531cb0c2c5796dcbb8bbfc687ba5","modified":1693380735639},{"_id":"public/archives/2023/index.html","hash":"4b220b37e1e227a4c365247c709216d96a5ac30a","modified":1693380735639},{"_id":"public/archives/2023/08/index.html","hash":"4339fe86cd12d470308a59f4c6980172f46340ec","modified":1693380735639},{"_id":"public/index.html","hash":"fcbdc6a20e272c294c362d1a1926b7a5f86278bf","modified":1693380735639},{"_id":"public/CNAME","hash":"f202a47391a2870611eb332369d4a70db1ee04c8","modified":1693378354067},{"_id":"public/assets/beian.png","hash":"a99df13e8eb11db86edebf6e5ac246eb59f4b3c4","modified":1693378354067},{"_id":"public/assets/algolia_logo.svg","hash":"90035272fa31a3f65b3c0e2cb8a633876ef457dc","modified":1693378354067},{"_id":"public/assets/favicon.ico","hash":"92f9579934260bc5f31d13cd01ddf9116bed8f12","modified":1693378354067},{"_id":"public/assets/example_qr1.png","hash":"cce20432c34875f4d9c6df927ede0fc0f00bb194","modified":1693378354067},{"_id":"public/assets/favicon1.ico","hash":"8b200c575d273d41a179c102442e191414e74eae","modified":1693378354067},{"_id":"public/css/dark.css.map","hash":"f49556935deae49df3158c2eb2265464129ef978","modified":1693378354067},{"_id":"public/assets/loading.svg","hash":"45be17d07697d604d8981890eb21e308530c7a38","modified":1693378354067},{"_id":"public/avatar/Misaka.jpg","hash":"74a0372523f98dfbba992bf80642e160d04dc9b1","modified":1693378354067},{"_id":"public/css/mobile.css.map","hash":"c9f9dade45b119ae2eb7a93be0160baef4d494f8","modified":1693378354067},{"_id":"public/avatar/star-lord.jpg","hash":"f4ad3fb109ca5d55cbdb64733bd2bd478b70b5a4","modified":1693378354067},{"_id":"public/avatar/diving.jpg","hash":"8229ec672d9721d2a2d09292874a577323bfbfb2","modified":1693378354067},{"_id":"public/font/Source Sans Pro.woff","hash":"a6722c9b6439b7a020a9be3d3178970757a9265c","modified":1693378354067},{"_id":"public/font/Source Sans Pro.woff2","hash":"da65f527a8da65d5eb6721626d28cfdb46ab104a","modified":1693378354067},{"_id":"public/scripts/customFontLoader.js.map","hash":"702a44b0b1b450263592bfb1199c8d36ea9834a2","modified":1693378354067},{"_id":"public/scripts/dark.js.map","hash":"feb9e1905c4b313b839c1c3b69ad61c05f265a9a","modified":1693378354067},{"_id":"public/scripts/main.js.LICENSE.txt","hash":"959bfc660011bc6a0800fe9e7974080f64c062aa","modified":1693378354067},{"_id":"public/scripts/search.js.LICENSE.txt","hash":"2c9b607ded909550f2ed2d0f2e7271781d9f78d9","modified":1693378354067},{"_id":"public/images/1693377274242.jpg","hash":"4ca9199e56777f3159450774c48b411c7a6adae2","modified":1693378354067},{"_id":"public/css/style.css.map","hash":"dbe8f8c1fccf8bd9d28ecf3874036a2281319aa0","modified":1693378354067},{"_id":"public/font/Oswald-Regular.ttf","hash":"965d729546a43a8490ad4cf33c25ac475682100c","modified":1693378354067},{"_id":"public/font/SourceCodePro-Regular.ttf.woff","hash":"12eef75e1ad3eca9dae42b65505010ce4464a315","modified":1693378354067},{"_id":"public/font/SourceCodePro-Regular.ttf.woff2","hash":"f5991289ec17884cb641da0646d278d36702a190","modified":1693378354067},{"_id":"public/intro/404-bg.jpg","hash":"3afb5bb26f4ff0bd0e0a28df955c8aa7d746d3c5","modified":1693378354067},{"_id":"public/css/dark.css","hash":"4db211216f16a5e66d4d499158f4005a1bbb39f5","modified":1693378354067},{"_id":"public/css/mobile.css","hash":"acb0dfcce26ec93f59c6ec4936006abbe8daefee","modified":1693378354067},{"_id":"public/lib/webfontloader.min.js","hash":"4c69aeb4e4f355912503d1c460e8e7aa6ea6963e","modified":1693378354067},{"_id":"public/scripts/dark.js","hash":"28ba818b2ab8a9454a52fe2710b5a8a81a195e4d","modified":1693378354067},{"_id":"public/scripts/customFontLoader.js","hash":"7c2f03fbd2b8340b77b1b02778a34e5ac10b560c","modified":1693378354067},{"_id":"public/css/style.css","hash":"f08b1ec3a5fe1bf936401a238d55e0487296b42c","modified":1693378354067},{"_id":"public/lib/jquery.min.js","hash":"ad886e472b3557f3dc7dfa2bc43468ab8d1cef5b","modified":1693378354067},{"_id":"public/scripts/share.js","hash":"2210dd8dacea4f1ca11c0047dfafd0a170abd953","modified":1693378354067},{"_id":"public/scripts/search.js","hash":"ac8e9d130ea410832a421d661898abee63bd8e67","modified":1693378354067},{"_id":"public/intro/about-bg.jpg","hash":"ab388276822417cc4e703312c14e20280ec783b3","modified":1693378354067},{"_id":"public/intro/post-bg.jpg","hash":"525fafb2238c27754d8fa751f143ff1de9b8482d","modified":1693378354067},{"_id":"public/scripts/share.js.map","hash":"1e018aa465800a066480e33c848f380880af6743","modified":1693378354067},{"_id":"public/scripts/main.js","hash":"11fd75dddcbef7157fbfb8717b3463a80fda1fb3","modified":1693378354067},{"_id":"public/intro/index-bg.jpg","hash":"96b52e177b8bc53e64ec6ee1e10b2b6a4e13083b","modified":1693378354067},{"_id":"public/assets/example_qr.png","hash":"1b7c5607629dd7edb512f2e38b720c29b8d7e844","modified":1693378354067},{"_id":"public/scripts/search.js.map","hash":"bd469588b3bee82b3cf72b72d447c854f4d76875","modified":1693378354067},{"_id":"public/scripts/main.js.map","hash":"79d928070b7e5333ca241c5563ab4fe9cab31b74","modified":1693378354067},{"_id":"source/_posts/Clean-Code/1693377274242.jpg","hash":"4ca9199e56777f3159450774c48b411c7a6adae2","modified":1693377297200},{"_id":"source/_posts/NQueens-Problem.md","hash":"3b191542af35b047b86c315659cb4333fe2a2e0a","modified":1693379761655},{"_id":"public/2023/07/20/NQueens-Problem/index.html","hash":"08cf20b4cb84fd89e1d7c3f3f4129cdbcb1ce67c","modified":1693380735639},{"_id":"public/archives/2023/07/index.html","hash":"5e4985324cb8ce9b08a77dab6ce8d4007ebc1937","modified":1693380735639},{"_id":"public/2023/08/30/Clean-Code/1693377274242.jpg","hash":"4ca9199e56777f3159450774c48b411c7a6adae2","modified":1693380735639}],"Category":[],"Data":[],"Page":[{"title":"about","date":"2023-08-30T06:08:57.000Z","_content":"","source":"about/index.md","raw":"---\ntitle: about\ndate: 2023-08-30 14:08:57\n---\n","updated":"2023-08-30T06:08:57.588Z","path":"about/index.html","comments":1,"layout":"page","_id":"cllxdr0fs0000fjfygp4u61yc","content":"","site":{"data":{}},"excerpt":"","more":""}],"Post":[{"title":"Clean Code","date":"2023-08-30T06:31:16.000Z","_content":"## Basic Principles\n\n- 简单暴力   **KISS (Keep it simple, stupid)**\n  - Clarity First，Optimization second. 能让人看懂是最优先， 性能再好都是其次\n  - 傻x都能写出能work的代码，好程序员写出来的是人类能懂的 “Any fool can write code that a computer can understand. Good programmers write code that humans can understand.” — Martin Fowler**\n  - 著名的雷神之锤代码 Q_rsqrt <https://github.com/id-Software/Quake-III-Arena/blob/master/code/game/q_math.c>\n  {% asset_img 1693377274242.jpg code1%}\n\n- 快速试错 [Rapid Iterative Testing and Evaluation (RITE)](https://about.gitlab.com/handbook/product/ux/ux-research/rite/)\n  - 找到问题的根源，在根源上改。 think before you code, don't make adhoc change or tweak some if condition without much thinking\n  - 重复代码 重复逻辑 不利于试错 不收敛 DRY (Don’t Repeat Yourself) principle\n  - 一切都是代码，ut和ft也是代码需要review.\"Talk is cheap. Show me the code.\" -- Linus Torvalds\n- 没有绝对的正确，核心是我们怎么妥协  ***“There are no solutions, only tradeoffs - Thomas Sowell”***\n  - 做一个有态度的 reviewer - Having a clear direction helps us converge quickly.\n    - code review 包含了主观的偏好 subjective [IMO] objective[FACT]\n    - senior 一定是对的吗 I disagree with your disagreement\n    - Let's appeal to rules that all team member respect （We Make Up the Rules as We Go Along）\n","source":"_posts/Clean-Code.md","raw":"---\ntitle: Clean Code\ndate: 2023-08-30 14:31:16\ntags:\n---\n## Basic Principles\n\n- 简单暴力   **KISS (Keep it simple, stupid)**\n  - Clarity First，Optimization second. 能让人看懂是最优先， 性能再好都是其次\n  - 傻x都能写出能work的代码，好程序员写出来的是人类能懂的 “Any fool can write code that a computer can understand. Good programmers write code that humans can understand.” — Martin Fowler**\n  - 著名的雷神之锤代码 Q_rsqrt <https://github.com/id-Software/Quake-III-Arena/blob/master/code/game/q_math.c>\n  {% asset_img 1693377274242.jpg code1%}\n\n- 快速试错 [Rapid Iterative Testing and Evaluation (RITE)](https://about.gitlab.com/handbook/product/ux/ux-research/rite/)\n  - 找到问题的根源，在根源上改。 think before you code, don't make adhoc change or tweak some if condition without much thinking\n  - 重复代码 重复逻辑 不利于试错 不收敛 DRY (Don’t Repeat Yourself) principle\n  - 一切都是代码，ut和ft也是代码需要review.\"Talk is cheap. Show me the code.\" -- Linus Torvalds\n- 没有绝对的正确，核心是我们怎么妥协  ***“There are no solutions, only tradeoffs - Thomas Sowell”***\n  - 做一个有态度的 reviewer - Having a clear direction helps us converge quickly.\n    - code review 包含了主观的偏好 subjective [IMO] objective[FACT]\n    - senior 一定是对的吗 I disagree with your disagreement\n    - Let's appeal to rules that all team member respect （We Make Up the Rules as We Go Along）\n","slug":"Clean-Code","published":1,"updated":"2023-08-30T07:00:21.868Z","_id":"cllxdr0ft0001fjfy7e306gat","comments":1,"layout":"post","photos":[],"link":"","content":"<h2 id=\"Basic-Principles\"><a href=\"#Basic-Principles\" class=\"headerlink\" title=\"Basic Principles\"></a>Basic Principles</h2><ul>\n<li><p>简单暴力   <strong>KISS (Keep it simple, stupid)</strong></p>\n<ul>\n<li>Clarity First，Optimization second. 能让人看懂是最优先， 性能再好都是其次</li>\n<li>傻x都能写出能work的代码，好程序员写出来的是人类能懂的 “Any fool can write code that a computer can understand. Good programmers write code that humans can understand.” — Martin Fowler**</li>\n<li>著名的雷神之锤代码 Q_rsqrt <a href=\"https://github.com/id-Software/Quake-III-Arena/blob/master/code/game/q_math.c\">https://github.com/id-Software/Quake-III-Arena/blob/master/code/game/q_math.c</a><img src=\"/2023/08/30/Clean-Code/1693377274242.jpg\" class=\"\" title=\"code1\"></li>\n</ul>\n</li>\n<li><p>快速试错 <a href=\"https://about.gitlab.com/handbook/product/ux/ux-research/rite/\">Rapid Iterative Testing and Evaluation (RITE)</a></p>\n<ul>\n<li>找到问题的根源，在根源上改。 think before you code, don’t make adhoc change or tweak some if condition without much thinking</li>\n<li>重复代码 重复逻辑 不利于试错 不收敛 DRY (Don’t Repeat Yourself) principle</li>\n<li>一切都是代码，ut和ft也是代码需要review.”Talk is cheap. Show me the code.” – Linus Torvalds</li>\n</ul>\n</li>\n<li><p>没有绝对的正确，核心是我们怎么妥协  <em><strong>“There are no solutions, only tradeoffs - Thomas Sowell”</strong></em></p>\n<ul>\n<li>做一个有态度的 reviewer - Having a clear direction helps us converge quickly.<ul>\n<li>code review 包含了主观的偏好 subjective [IMO] objective[FACT]</li>\n<li>senior 一定是对的吗 I disagree with your disagreement</li>\n<li>Let’s appeal to rules that all team member respect （We Make Up the Rules as We Go Along）</li>\n</ul>\n</li>\n</ul>\n</li>\n</ul>\n","site":{"data":{}},"excerpt":"","more":"<h2 id=\"Basic-Principles\"><a href=\"#Basic-Principles\" class=\"headerlink\" title=\"Basic Principles\"></a>Basic Principles</h2><ul>\n<li><p>简单暴力   <strong>KISS (Keep it simple, stupid)</strong></p>\n<ul>\n<li>Clarity First，Optimization second. 能让人看懂是最优先， 性能再好都是其次</li>\n<li>傻x都能写出能work的代码，好程序员写出来的是人类能懂的 “Any fool can write code that a computer can understand. Good programmers write code that humans can understand.” — Martin Fowler**</li>\n<li>著名的雷神之锤代码 Q_rsqrt <a href=\"https://github.com/id-Software/Quake-III-Arena/blob/master/code/game/q_math.c\">https://github.com/id-Software/Quake-III-Arena/blob/master/code/game/q_math.c</a><img src=\"/2023/08/30/Clean-Code/1693377274242.jpg\" class=\"\" title=\"code1\"></li>\n</ul>\n</li>\n<li><p>快速试错 <a href=\"https://about.gitlab.com/handbook/product/ux/ux-research/rite/\">Rapid Iterative Testing and Evaluation (RITE)</a></p>\n<ul>\n<li>找到问题的根源，在根源上改。 think before you code, don’t make adhoc change or tweak some if condition without much thinking</li>\n<li>重复代码 重复逻辑 不利于试错 不收敛 DRY (Don’t Repeat Yourself) principle</li>\n<li>一切都是代码，ut和ft也是代码需要review.”Talk is cheap. Show me the code.” – Linus Torvalds</li>\n</ul>\n</li>\n<li><p>没有绝对的正确，核心是我们怎么妥协  <em><strong>“There are no solutions, only tradeoffs - Thomas Sowell”</strong></em></p>\n<ul>\n<li>做一个有态度的 reviewer - Having a clear direction helps us converge quickly.<ul>\n<li>code review 包含了主观的偏好 subjective [IMO] objective[FACT]</li>\n<li>senior 一定是对的吗 I disagree with your disagreement</li>\n<li>Let’s appeal to rules that all team member respect （We Make Up the Rules as We Go Along）</li>\n</ul>\n</li>\n</ul>\n</li>\n</ul>\n"},{"title":"NQueens Problem","date":"2023-07-20T07:05:51.000Z","_content":"# NQueens问题\n\n著名的N皇后问题，N皇后问题是一个经典的问题，在一个N*N的棋盘上放置N个皇后，每行一个并使其不能互相攻击（同一行、同一列、同一斜线上的皇后都会自动攻击\n通过之前的文章中提到的DFS可以解决。\n其实没有啥好的办法，就是回溯（backtracking）。时间复杂的为： Big O of N！， N的阶乘，非常耗时，几乎是最差的了。\n看一下伪代码：\n\n1) Start in the leftmost column --最左边的列开始\n2) If all queens are placed -- 退出条件，n个皇后都摆好了\n    return true\n3) Try all rows in the current column. -- 试每一个行\n   Do following for every tried row.\n    a) If the queen can be placed safely in this row --回溯算法，先用上当前\n       then mark this [row, column] as part of the\n       solution and recursively check if placing\n       queen here leads to a solution.\n    b) If placing the queen in [row, column] leads to  -- 递归调用，试下一列\n       a solution then return true.\n    c) If placing queen doesn't lead to a solution then -- 回溯算法， 用完恢复\n       unmark this [row, column] (Backtrack) and go to\n       step (a) to try other rows.\n3) If all rows have been tried and nothing worked, -- 找不到返回false\n   return false to trigger backtracking.\n 比较难写的部分其实在于区check当前状态是否有效。可以有点儿小技巧。 不bb了， let code do the talking。\n\n```\npublic boolean isValid(char[][] chessboard, int x, int y) {\n\n    int rowLen = chessboard.length;\n    int colLen = chessboard[0].length;\n    // check single column, 检查列\n    for (int i = 0; i < chessboard.length; i++) { \n        if (chessboard[i][y] == 'Q') { \n            return false; \n        } \n    } // no need to check single row，没必要检查行，因为遍历的时候就已经天然的一行放一个了。 \n    // check 45 diagonal，重点来了 45度检查，巧妙，i-j 为定值。 \n    for (int i = x, j = y; i >= 0 && j >= 0; i--, j--) {\n        if (chessboard[i][j] == 'Q') {\n            return false;\n        }\n    }\n    for (int i = x, j = y; i < rowLen && j < colLen; i++, j++) {\n        if (chessboard[i][j] == 'Q') {\n            return false;\n        }\n    }\n    // check 135 diagonal， 135度的检查， i+j 为定值。\n    for (int i = x, j = y; i < rowLen && j >= 0; i++, j--) {\n        if (chessboard[i][j] == 'Q') {\n            return false;\n        }\n    }\n    for (int i = x, j = y; i >= 0 && j < colLen; i--, j++) {\n        if (chessboard[i][j] == 'Q') {\n            return false;\n        }\n    }\n\n    return true;\n}\n```\n","source":"_posts/NQueens-Problem.md","raw":"---\ntitle: NQueens Problem\ndate: 2023-07-20 15:05:51\ntags:\n---\n# NQueens问题\n\n著名的N皇后问题，N皇后问题是一个经典的问题，在一个N*N的棋盘上放置N个皇后，每行一个并使其不能互相攻击（同一行、同一列、同一斜线上的皇后都会自动攻击\n通过之前的文章中提到的DFS可以解决。\n其实没有啥好的办法，就是回溯（backtracking）。时间复杂的为： Big O of N！， N的阶乘，非常耗时，几乎是最差的了。\n看一下伪代码：\n\n1) Start in the leftmost column --最左边的列开始\n2) If all queens are placed -- 退出条件，n个皇后都摆好了\n    return true\n3) Try all rows in the current column. -- 试每一个行\n   Do following for every tried row.\n    a) If the queen can be placed safely in this row --回溯算法，先用上当前\n       then mark this [row, column] as part of the\n       solution and recursively check if placing\n       queen here leads to a solution.\n    b) If placing the queen in [row, column] leads to  -- 递归调用，试下一列\n       a solution then return true.\n    c) If placing queen doesn't lead to a solution then -- 回溯算法， 用完恢复\n       unmark this [row, column] (Backtrack) and go to\n       step (a) to try other rows.\n3) If all rows have been tried and nothing worked, -- 找不到返回false\n   return false to trigger backtracking.\n 比较难写的部分其实在于区check当前状态是否有效。可以有点儿小技巧。 不bb了， let code do the talking。\n\n```\npublic boolean isValid(char[][] chessboard, int x, int y) {\n\n    int rowLen = chessboard.length;\n    int colLen = chessboard[0].length;\n    // check single column, 检查列\n    for (int i = 0; i < chessboard.length; i++) { \n        if (chessboard[i][y] == 'Q') { \n            return false; \n        } \n    } // no need to check single row，没必要检查行，因为遍历的时候就已经天然的一行放一个了。 \n    // check 45 diagonal，重点来了 45度检查，巧妙，i-j 为定值。 \n    for (int i = x, j = y; i >= 0 && j >= 0; i--, j--) {\n        if (chessboard[i][j] == 'Q') {\n            return false;\n        }\n    }\n    for (int i = x, j = y; i < rowLen && j < colLen; i++, j++) {\n        if (chessboard[i][j] == 'Q') {\n            return false;\n        }\n    }\n    // check 135 diagonal， 135度的检查， i+j 为定值。\n    for (int i = x, j = y; i < rowLen && j >= 0; i++, j--) {\n        if (chessboard[i][j] == 'Q') {\n            return false;\n        }\n    }\n    for (int i = x, j = y; i >= 0 && j < colLen; i--, j++) {\n        if (chessboard[i][j] == 'Q') {\n            return false;\n        }\n    }\n\n    return true;\n}\n```\n","slug":"NQueens-Problem","published":1,"updated":"2023-08-30T07:16:01.655Z","_id":"cllxe9svh0000qyfy2mbo4jlc","comments":1,"layout":"post","photos":[],"link":"","content":"<h1 id=\"NQueens问题\"><a href=\"#NQueens问题\" class=\"headerlink\" title=\"NQueens问题\"></a>NQueens问题</h1><p>著名的N皇后问题，N皇后问题是一个经典的问题，在一个N*N的棋盘上放置N个皇后，每行一个并使其不能互相攻击（同一行、同一列、同一斜线上的皇后都会自动攻击<br>通过之前的文章中提到的DFS可以解决。<br>其实没有啥好的办法，就是回溯（backtracking）。时间复杂的为： Big O of N！， N的阶乘，非常耗时，几乎是最差的了。<br>看一下伪代码：</p>\n<ol>\n<li>Start in the leftmost column –最左边的列开始</li>\n<li>If all queens are placed – 退出条件，n个皇后都摆好了<br> return true</li>\n<li>Try all rows in the current column. – 试每一个行<br>Do following for every tried row.<br> a) If the queen can be placed safely in this row –回溯算法，先用上当前<br>then mark this [row, column] as part of the<br>solution and recursively check if placing<br>queen here leads to a solution.<br> b) If placing the queen in [row, column] leads to  – 递归调用，试下一列<br>a solution then return true.<br> c) If placing queen doesn’t lead to a solution then – 回溯算法， 用完恢复<br>unmark this [row, column] (Backtrack) and go to<br>step (a) to try other rows.</li>\n<li>If all rows have been tried and nothing worked, – 找不到返回false<br>return false to trigger backtracking.<br> 比较难写的部分其实在于区check当前状态是否有效。可以有点儿小技巧。 不bb了， let code do the talking。</li>\n</ol>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">public boolean isValid(char[][] chessboard, int x, int y) &#123;</span><br><span class=\"line\"></span><br><span class=\"line\">    int rowLen = chessboard.length;</span><br><span class=\"line\">    int colLen = chessboard[0].length;</span><br><span class=\"line\">    // check single column, 检查列</span><br><span class=\"line\">    for (int i = 0; i &lt; chessboard.length; i++) &#123; </span><br><span class=\"line\">        if (chessboard[i][y] == &#x27;Q&#x27;) &#123; </span><br><span class=\"line\">            return false; </span><br><span class=\"line\">        &#125; </span><br><span class=\"line\">    &#125; // no need to check single row，没必要检查行，因为遍历的时候就已经天然的一行放一个了。 </span><br><span class=\"line\">    // check 45 diagonal，重点来了 45度检查，巧妙，i-j 为定值。 </span><br><span class=\"line\">    for (int i = x, j = y; i &gt;= 0 &amp;&amp; j &gt;= 0; i--, j--) &#123;</span><br><span class=\"line\">        if (chessboard[i][j] == &#x27;Q&#x27;) &#123;</span><br><span class=\"line\">            return false;</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">    for (int i = x, j = y; i &lt; rowLen &amp;&amp; j &lt; colLen; i++, j++) &#123;</span><br><span class=\"line\">        if (chessboard[i][j] == &#x27;Q&#x27;) &#123;</span><br><span class=\"line\">            return false;</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">    // check 135 diagonal， 135度的检查， i+j 为定值。</span><br><span class=\"line\">    for (int i = x, j = y; i &lt; rowLen &amp;&amp; j &gt;= 0; i++, j--) &#123;</span><br><span class=\"line\">        if (chessboard[i][j] == &#x27;Q&#x27;) &#123;</span><br><span class=\"line\">            return false;</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">    for (int i = x, j = y; i &gt;= 0 &amp;&amp; j &lt; colLen; i--, j++) &#123;</span><br><span class=\"line\">        if (chessboard[i][j] == &#x27;Q&#x27;) &#123;</span><br><span class=\"line\">            return false;</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">    return true;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n","site":{"data":{}},"excerpt":"","more":"<h1 id=\"NQueens问题\"><a href=\"#NQueens问题\" class=\"headerlink\" title=\"NQueens问题\"></a>NQueens问题</h1><p>著名的N皇后问题，N皇后问题是一个经典的问题，在一个N*N的棋盘上放置N个皇后，每行一个并使其不能互相攻击（同一行、同一列、同一斜线上的皇后都会自动攻击<br>通过之前的文章中提到的DFS可以解决。<br>其实没有啥好的办法，就是回溯（backtracking）。时间复杂的为： Big O of N！， N的阶乘，非常耗时，几乎是最差的了。<br>看一下伪代码：</p>\n<ol>\n<li>Start in the leftmost column –最左边的列开始</li>\n<li>If all queens are placed – 退出条件，n个皇后都摆好了<br> return true</li>\n<li>Try all rows in the current column. – 试每一个行<br>Do following for every tried row.<br> a) If the queen can be placed safely in this row –回溯算法，先用上当前<br>then mark this [row, column] as part of the<br>solution and recursively check if placing<br>queen here leads to a solution.<br> b) If placing the queen in [row, column] leads to  – 递归调用，试下一列<br>a solution then return true.<br> c) If placing queen doesn’t lead to a solution then – 回溯算法， 用完恢复<br>unmark this [row, column] (Backtrack) and go to<br>step (a) to try other rows.</li>\n<li>If all rows have been tried and nothing worked, – 找不到返回false<br>return false to trigger backtracking.<br> 比较难写的部分其实在于区check当前状态是否有效。可以有点儿小技巧。 不bb了， let code do the talking。</li>\n</ol>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">public boolean isValid(char[][] chessboard, int x, int y) &#123;</span><br><span class=\"line\"></span><br><span class=\"line\">    int rowLen = chessboard.length;</span><br><span class=\"line\">    int colLen = chessboard[0].length;</span><br><span class=\"line\">    // check single column, 检查列</span><br><span class=\"line\">    for (int i = 0; i &lt; chessboard.length; i++) &#123; </span><br><span class=\"line\">        if (chessboard[i][y] == &#x27;Q&#x27;) &#123; </span><br><span class=\"line\">            return false; </span><br><span class=\"line\">        &#125; </span><br><span class=\"line\">    &#125; // no need to check single row，没必要检查行，因为遍历的时候就已经天然的一行放一个了。 </span><br><span class=\"line\">    // check 45 diagonal，重点来了 45度检查，巧妙，i-j 为定值。 </span><br><span class=\"line\">    for (int i = x, j = y; i &gt;= 0 &amp;&amp; j &gt;= 0; i--, j--) &#123;</span><br><span class=\"line\">        if (chessboard[i][j] == &#x27;Q&#x27;) &#123;</span><br><span class=\"line\">            return false;</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">    for (int i = x, j = y; i &lt; rowLen &amp;&amp; j &lt; colLen; i++, j++) &#123;</span><br><span class=\"line\">        if (chessboard[i][j] == &#x27;Q&#x27;) &#123;</span><br><span class=\"line\">            return false;</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">    // check 135 diagonal， 135度的检查， i+j 为定值。</span><br><span class=\"line\">    for (int i = x, j = y; i &lt; rowLen &amp;&amp; j &gt;= 0; i++, j--) &#123;</span><br><span class=\"line\">        if (chessboard[i][j] == &#x27;Q&#x27;) &#123;</span><br><span class=\"line\">            return false;</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">    for (int i = x, j = y; i &gt;= 0 &amp;&amp; j &lt; colLen; i--, j++) &#123;</span><br><span class=\"line\">        if (chessboard[i][j] == &#x27;Q&#x27;) &#123;</span><br><span class=\"line\">            return false;</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">    return true;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n"}],"PostAsset":[{"_id":"source/_posts/Clean-Code/1693377274242.jpg","slug":"1693377274242.jpg","post":"cllxdr0ft0001fjfy7e306gat","modified":0,"renderable":0}],"PostCategory":[],"PostTag":[],"Tag":[]}}